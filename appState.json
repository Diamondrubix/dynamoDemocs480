{
  "EDITOR_STATE": {
    "allProjectFiles": {
      "91848b40-062a-4494-9d63-c8c87e042976": {
        "id": "91848b40-062a-4494-9d63-c8c87e042976",
        "parent": null,
        "name": "cs480Dynamo",
        "type": "DIRECTORY",
        "isDirectory": true,
        "children": [
          "46d45ab9-af99-402c-9f05-604b2e564de7",
          "e8c8bc0f-1f9a-4abe-9f0f-cb95b63f13e3"
        ],
        "isRemovable": false,
        "filePath": "cs480Dynamo"
      },
      "46d45ab9-af99-402c-9f05-604b2e564de7": {
        "id": "46d45ab9-af99-402c-9f05-604b2e564de7",
        "parent": "91848b40-062a-4494-9d63-c8c87e042976",
        "name": "lambda.js",
        "type": "LAMBDA_FILE",
        "isDirectory": false,
        "children": [],
        "isRemovable": true,
        "filePath": "cs480Dynamo/lambda.js",
        "code": "let AWS = require('aws-sdk');\nvar sha1 = require('sha1');\nconst ddb = new AWS.DynamoDB.DocumentClient();\n\nexports.handler = function (event, context, callback) {\n\n    var randomToken = Math.random()//sha1(Math.random()); //il figure out how to import libraries later, this project was not about lambda anyway\n\n    ddb.put({\n        TableName: 'users',\n        Item: { \n            'username': event.username,\n            'password': event.password,\n            'authtoken': randomToken}\n    }).promise().then(function (data) {\n        callback(null, { \"message\": \"user: \"+event.username+\" pass \"+event.password+\" returned data: \"+data });\n        //your logic goes here\n    }).catch(function (err) {\n        callback(null, { \"message\": \"something went wrong \"+err });\n        //handle error\n    });\n\n    \n\n\n\n}",
        "triggers": [
          {
            "resourceName": "apigusEast1testcreateDynamoUserpost",
            "config": {}
          },
          {
            "resourceName": "apigusEast1testcreateUserpost",
            "config": {}
          },
          {
            "resourceName": "apigusEast1testcreateUserpost",
            "config": {}
          }
        ],
        "config": {
          "runtime": "nodejs8.10",
          "handler": "handler",
          "timeout": 60,
          "memory": 128,
          "layers": []
        }
      },
      "e8c8bc0f-1f9a-4abe-9f0f-cb95b63f13e3": {
        "id": "e8c8bc0f-1f9a-4abe-9f0f-cb95b63f13e3",
        "parent": "91848b40-062a-4494-9d63-c8c87e042976",
        "name": "dynamoDemoLogin.js",
        "type": "LAMBDA_FILE",
        "isDirectory": false,
        "children": [],
        "isRemovable": true,
        "filePath": "cs480Dynamo/dynamoDemoLogin.js",
        "code": "let AWS = require('aws-sdk');\nconst ddb = new AWS.DynamoDB.DocumentClient();\n\nexports.handler = function (event, context, callback) {\n\n    \n        ddb.get({\n            TableName: 'users',\n            Key: { 'username': event.username }\n        }).promise().then(function (data) {\n            if (event.password == data.Item.password) {\n                callback(null, { \"message\": data.Item.authtoken });\n            } else {\n                callback(null, { \"message\": \"bad password\" + JSON.stringify(data) });\n            }\n        }).catch(function (err) {\n    \n            callback(null, { \"message\": \"some weird error: \" + err });\n        });\n        \n/*\n    ddb.query({\n        TableName: 'users'\n        , ExpressionAttributeValues: { ':username': 'TEST', ':favoriteFood': 'padThai' }, KeyConditionExpression: ' S :username and  S :favoriteFood', FilterExpression: 'password S :favoriteFood'\n    }).promise().then(function (data) {\n        //your logic goes here\n    }).catch(function (err) {\n        //handle error\n    });\n\n\n    ddb.query({\n        TableName: 'users'\n    }).promise().then(function (data) {\n\n        callback(null, { \"message\": JSON.stringify(data) });\n    }).catch(function (err) {\n        //handle error\n        callback(null, { \"message\": err });\n    });\n\n    */\n\n    /*\n        ddb.scan({\n            TableName: 'users'\n        }).promise().then(function (data) {\n             callback(null, { \"message\": JSON.stringify(data)});\n        }).catch(function (err) {\n             callback(null, { \"message\": err});\n        });\n        */\n\n\n\n\n}",
        "triggers": [
          {
            "resourceName": "apigusEast1testloginDynamoUserpost",
            "config": {}
          }
        ],
        "config": {
          "runtime": "nodejs8.10",
          "handler": "handler",
          "timeout": 60,
          "memory": 128,
          "layers": []
        }
      }
    },
    "deletedFiles": [],
    "rootNode": "91848b40-062a-4494-9d63-c8c87e042976",
    "openFiles": [
      "46d45ab9-af99-402c-9f05-604b2e564de7",
      "e8c8bc0f-1f9a-4abe-9f0f-cb95b63f13e3"
    ],
    "currentFileId": "46d45ab9-af99-402c-9f05-604b2e564de7",
    "resources": {
      "apigusEast1testcreateDynamoUserpost": {
        "name": "apigusEast1testcreateDynamoUserpost",
        "type": "API_GATEWAY",
        "config": {
          "selectedRegion": "us-east-1",
          "apiMode": 1,
          "apiName": "test",
          "apiId": "7rigu1t3sg",
          "endpointType": "EDGE",
          "rootResourceId": "8fatwgybp2",
          "existingResources": {
            "/": "8fatwgybp2"
          },
          "resourceMode": 0,
          "resourceName": "createDynamoUser",
          "resourcePath": "/createDynamoUser",
          "restMethod": "POST",
          "proxyIntegration": false,
          "enableCORS": false,
          "stageMode": 1,
          "stageName": "testStage",
          "stageDeploymentId": "2q955h"
        },
        "globallyEditable": false
      },
      "apigusEast1testcreateUserpost": {
        "name": "apigusEast1testcreateUserpost",
        "type": "API_GATEWAY",
        "config": {
          "selectedRegion": "us-east-1",
          "apiMode": 1,
          "apiName": "test",
          "apiId": "7rigu1t3sg",
          "endpointType": "EDGE",
          "rootResourceId": "8fatwgybp2",
          "existingResources": {
            "/": "8fatwgybp2"
          },
          "resourceMode": 0,
          "resourceName": "createUser",
          "resourcePath": "/createUser",
          "restMethod": "POST",
          "proxyIntegration": false,
          "enableCORS": false,
          "stageMode": 1,
          "stageName": "testStage",
          "stageDeploymentId": "2q955h"
        },
        "globallyEditable": false
      },
      "ddbusers": {
        "name": "ddbusers",
        "type": "DynamoDB",
        "config": {
          "mode": 1,
          "operation": "query",
          "table": {
            "arn": "arn:aws:dynamodb:us-east-1:997927943405:table/users",
            "name": "users",
            "partitionKey": "username",
            "partitionKeyType": "S",
            "hasSortKey": false,
            "sortKey": "",
            "sortKeyType": "S",
            "mode": 1
          },
          "parameters": {
            "Key": {},
            "Item": {},
            "ExpressionAttributeValues": {
              ":username": "TEST",
              ":favoriteFood": "padThai"
            },
            "KeyConditionExpression": " S :username and  S :favoriteFood",
            "FilterExpression": "password S :favoriteFood"
          },
          "triggerParams": {},
          "validator": {
            "validatableFields": {},
            "validity": true
          },
          "valid": true
        },
        "globallyEditable": false
      },
      "apigusEast1testloginDynamoUserpost": {
        "name": "apigusEast1testloginDynamoUserpost",
        "type": "API_GATEWAY",
        "config": {
          "selectedRegion": "us-east-1",
          "apiMode": 1,
          "apiName": "test",
          "apiId": "7rigu1t3sg",
          "endpointType": "EDGE",
          "rootResourceId": "8fatwgybp2",
          "existingResources": {
            "/createUser": "7ie9s0",
            "/": "8fatwgybp2",
            "/createDynamoUser": "znh4pb"
          },
          "resourceMode": 0,
          "resourceName": "loginDynamoUser",
          "resourcePath": "/loginDynamoUser",
          "restMethod": "POST",
          "proxyIntegration": false,
          "enableCORS": false,
          "stageMode": 1,
          "stageName": "testStage",
          "stageDeploymentId": "jae24l"
        },
        "globallyEditable": false
      }
    },
    "customTemplate": {
      "dialect": null,
      "definitions": {}
    },
    "envVariables": [
      {
        "lambdaId": "all",
        "varKey": "SIGMA_AWS_ACC_ID",
        "varValue": null,
        "shouldPersist": false,
        "displayOnly": false,
        "editable": false
      }
    ],
    "packageJSON": {
      "dependencies": {
        "aws-sdk": {
          "name": "aws-sdk",
          "version": "2.176.0",
          "dev": true,
          "notRemovable": false
        }
      }
    }
  },
  "PROJECT_META": {
    "projectName": "cs480Dynamo",
    "projectDescription": "I choose to explore dynamo db for my cs480 final project. This is a demo program to show off the database",
    "projectVersion": "1.0.0",
    "projectRegion": "us-east-1",
    "platform": "AWS",
    "platformRegions": {},
    "lastSave": 1556524465919
  },
  "VCS_STATE": {
    "provider": "GitHub",
    "repo": {
      "name": "dynamoDemocs480",
      "url": "https://github.com/Diamondrubix/dynamoDemocs480"
    }
  }
}